name: 'APK Release'

on:
    push:
        tags:
        - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Set up JDK'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: 'Checkout code'
        uses: 'actions/checkout@v4'
        # Checkout the app code using the "actions/checkout" action.

      - name: 'Clone Flutter repository with master channel'
        uses: 'subosito/flutter-action@v2'
        with:
          channel: stable
      
      - name: 'Check Flutter environment'
        run: 'flutter doctor -v'
        # Check the Flutter environment.
      
      - name: 'Get packages'
        run: 'flutter pub get'
        # Get the Flutter packages.

      - name: Run Build Runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
      
      - name: 'Build APK'
        id: 'build'
        run: 'flutter build apk && echo "::set-output name=built-apk::build/app/outputs/flutter-apk/"'
        # Build the APK using the value of the "matrix-target" input.
        # Use the "id" property to give the step a unique identifier.
        # Use the "::set-output" command to set the value of the "built-apk" output variable.
      
        #   - name: 'Upload APK'
        #     uses: 'actions/upload-artifact@v2'
        #     with:
        #       name: 'Built APK'
        #       path: '${{ steps.build.outputs.built-apk }}'
        

      - name: 'Release'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            prerelease: false
            files: |
                build/app/outputs/flutter-apk/*.apk
                build/app/outputs/flutter-apk/*.apk.sha1

      - name: Run ci-transfer
        env:
          OSS_DESTINATION: ${{ secrets.OSS_DESTINATION }}
        run: |
          wget https://github.com/corkine/ci-transfer/releases/latest/download/ci-transfer
          chmod +x ci-transfer
          ./ci-transfer -s build/app/outputs/flutter-apk/app-release.apk --oss-destination "$OSS_DESTINATION"

      - name: Notice to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "ScreenMe Flutter Project CI/CD Build ${{ job.status }} <${{ github.event.pull_request.html_url || github.event.head_commit.url }}| HERE>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        